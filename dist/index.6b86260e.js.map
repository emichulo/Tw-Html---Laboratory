{"mappings":"AAWA,MAAM,sBAAsB;IAExB,OAAO,MAAM,GAAgB;QACzB,WAAW;QACX,UAAU;QACV,UAAU;QACV,OAAO;QACP,UAAU;QACV,iBAAiB;KACpB,CAAC;IAEF,aAAc;QACZ,KAAK,MAAM,KAAK,IAAI,sBAAsB,CAAC,MAAM,CAChD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAE1B;IAED,WAAW,CAAC,KAAgB,EAAE;QAC7B,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAE,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAU,GAAK;YACrE,IAAI,CAAC,QAAQ,GAAG;gBAAC,GAAG,IAAI,CAAC,QAAQ;gBAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;aAAC,CAAC;YAChE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC7B,CAAC,CAAC;KACJ;IAED,aAAa,GAAG,CAAC,KAAgB,GAAK;QACrC,IAAI,KAAK,KAAK,WAAW,EAAE;YACrB,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EACpC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,4CAA4C,CAAC,CAAC;iBAE9E,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;YAEhD,IAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,EACpC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SAG3C;QAED,IAAI,KAAK,KAAK,UAAU;YACpB,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EACnC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,4CAA4C,CAAC,CAAC;iBAE7E,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;SAErD;QAED,IAAI,KAAK,KAAK,iBAAiB;YAC7B,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,EACzD,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,iDAAiD,CAAC,CAAC;iBAEzF,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAC;SAE5D;QAEM,IAAI,KAAK,KAAK,UAAU,EAAE;YAC3B,MAAM,UAAU,+FAAsG,AAAC;YACvH,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EACzC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;iBAEhD,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;SAErD;KAEE,CAAA;IAED,aAAa,GAAG,CAAC,KAAgB,EAAE,OAAe,GAAK;QACtD,QAAQ,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAE,SAAS,GAAG,OAAO,CAAC;KACpE,CAAA;CACF;AAKH,MAAM,UAAU,GAAG,IAAI,sBAAsB,EAAE,AAAC","sources":["app.ts"],"sourcesContent":["interface IFormData {\r\n\tfirstName: string;\r\n    lastName: string;\r\n    birthday: Date;\r\n    password: string;\r\n    confirmPassword: string;\r\n    email: string;\r\n}\r\n\r\ntype FormField = keyof IFormData;\r\n\r\nclass RegisterFormController {\r\n    formData: IFormData;\r\n    static fields: FormField[] = [\r\n        \"firstName\", \r\n        \"lastName\", \r\n        \"birthday\",\r\n        \"email\",\r\n        \"password\", \r\n        \"confirmPassword\"\r\n    ];\r\n  \r\n    constructor() {\r\n      for (const field of RegisterFormController.fields) {\r\n      \tthis.bindElement(field);\r\n      }\r\n    }\r\n    \r\n    bindElement(field: FormField) {\r\n    \tdocument.getElementById(field)!.addEventListener(\"input\", (event: any) => {\r\n          this.formData = {...this.formData, [field]: event.target.value};\r\n          console.log(this.formData);\r\n          this.onDataChanged(field);\r\n      });\r\n    }\r\n    \r\n    onDataChanged = (field: FormField) => {\r\n    \tif (field === \"firstName\") {\r\n          \tif (this.formData.firstName.length < 2) {\r\n            \tthis.setValidation(\"firstName\", \"Your name must have at least 2 characters.\");\r\n            } else {\r\n            \tthis.setValidation(\"firstName\", \"Looks good!\");\r\n            }\r\n            if(this.formData.firstName.length == 0){\r\n              this.setValidation(\"firstName\", \"  \");\r\n            }\r\n            \r\n        }\r\n\r\n        if (field === \"lastName\") {\r\n            if (this.formData.lastName.length < 2) {\r\n              this.setValidation(\"lastName\", \"Your name must have at least 2 characters.\");\r\n          } else {\r\n              this.setValidation(\"lastName\", \"Looks good!\");\r\n          }\r\n      }\r\n\r\n      if (field === \"confirmPassword\") {\r\n        if (this.formData.password != this.formData.confirmPassword) {\r\n          this.setValidation(\"confirmPassword\", \"Password and Confirm Password must be the same!\");\r\n      } else {\r\n          this.setValidation(\"confirmPassword\", \"Looks good!\");\r\n      }\r\n  }\r\n\r\n         if (field === \"password\") {\r\n        const expression:RegExp = /(?=[A-Za-z0-9@#$%^&+!=]+$)^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@#$%^&+!=])(?=.{8,}).*$/g;\r\n        if (expression.test(this.formData.password)) {\r\n          this.setValidation(\"password\", \"Password week\");\r\n      } else {\r\n          this.setValidation(\"password\", \"Looks good!\");\r\n      }\r\n  }\r\n\r\n    }\r\n    \r\n    setValidation = (field: FormField, message: string) => {\r\n    \tdocument.getElementById(`${field}-validation`)!.innerHTML = message;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\nconst controller = new RegisterFormController();\r\n\r\n"],"names":[],"version":3,"file":"index.6b86260e.js.map","sourceRoot":"/__parcel_source_root/"}